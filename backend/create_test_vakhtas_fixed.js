require('dotenv').config();
const { Pool } = require('pg');

const pool = new Pool({
  host: process.env.DB_HOST || 'localhost',
  port: process.env.DB_PORT || 5432,
  database: process.env.DB_NAME || 'borovy',
  user: process.env.DB_USER || 'borovy_user',
  password: process.env.DB_PASSWORD || 'borovy_password',
});

const createTestVakhtas = async () => {
  try {
    console.log('üèóÔ∏è Creating test vakhtas...');

    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –≤–∞—Ö—Ç—ã
    await pool.query("DELETE FROM vakhtas WHERE title LIKE '–¢–µ—Å—Ç–æ–≤–∞—è –≤–∞—Ö—Ç–∞%'");

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –≤–∞—Ö—Ç—ã
    await pool.query(`
      INSERT INTO vakhtas (title, description, location, total_places, start_date, end_date, requirements, conditions)
      VALUES
      ('–†–∞–∑–Ω–æ—Ä–∞–±–æ—á–∏–π –Ω–∞ —Å–∫–ª–∞–¥', '–†–∞–±–æ—Ç–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ, –ø–æ–≥—Ä—É–∑–æ-—Ä–∞–∑–≥—Ä—É–∑–æ—á–Ω—ã–µ —Ä–∞–±–æ—Ç—ã', '–ú–æ—Å–∫–≤–∞, —Å–∫–ª–∞–¥ ‚Ññ5', 20, '2024-10-05', '2024-12-05', '–§–∏–∑–∏—á–µ—Å–∫–∞—è –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å', '–û–±—â–µ–∂–∏—Ç–∏–µ, –ø–∏—Ç–∞–Ω–∏–µ, 5000 —Ä—É–±/–¥–µ–Ω—å'),
      ('–°–±–æ—Ä—â–∏–∫ –º–µ–±–µ–ª–∏', '–°–±–æ—Ä–∫–∞ –∫–æ—Ä–ø—É—Å–Ω–æ–π –º–µ–±–µ–ª–∏ –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ', '–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å, –≥. –•–∏–º–∫–∏', 10, '2024-10-10', '2024-11-10', '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç—Å—è, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å', '–û–±—â–µ–∂–∏—Ç–∏–µ, 6000 —Ä—É–±/–¥–µ–Ω—å'),
      ('–£–ø–∞–∫–æ–≤—â–∏–∫ –ø—Ä–æ–¥—É–∫—Ü–∏–∏', '–§–∞—Å–æ–≤–∫–∞ –∏ —É–ø–∞–∫–æ–≤–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–∏—Ç–∞–Ω–∏—è', '–ö–∞–∑–∞–Ω—å, –∑–∞–≤–æ–¥ ‚Ññ2', 15, '2024-10-15', '2024-11-15', '–ê–∫–∫—É—Ä–∞—Ç–Ω–æ—Å—Ç—å, —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã', '–°–≤–æ—è –∫–æ–º–Ω–∞—Ç–∞, 4500 —Ä—É–±/–¥–µ–Ω—å')
    `);

    console.log('‚úÖ Test vakhtas created successfully!');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤–∞—Ö—Ç—ã —Å–æ–∑–¥–∞–ª–∏—Å—å
    const result = await pool.query('SELECT * FROM vakhtas WHERE is_active = true');
    console.log(`üìä Active vakhtas in database: ${result.rows.length}`);
    result.rows.forEach(vakhta => {
      console.log(`   - ${vakhta.title} (${vakhta.location})`);
    });

  } catch (error) {
    console.error('‚ùå Error creating test vakhtas:', error);
  } finally {
    await pool.end();
  }
};

createTestVakhtas();