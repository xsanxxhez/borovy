const { pool } = require('./config/database');
const bcrypt = require('bcryptjs');

async function seedDatabase() {
  try {
    console.log('üå± Seeding database with test data...');

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ö–µ—à –¥–ª—è –ø–∞—Ä–æ–ª—è "123456"
    const correctHash = await bcrypt.hash('123456', 10);
    console.log(`üîë Generated hash: ${correctHash}`);

    // –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    console.log('üßπ Clearing existing data...');
    await pool.query('DELETE FROM borov_vakhta_history');
    await pool.query('DELETE FROM specialties');
    await pool.query('DELETE FROM vakhtas');
    await pool.query('DELETE FROM borovs');
    await pool.query('DELETE FROM slons');
    await pool.query('DELETE FROM promocodes');
    await pool.query('DELETE FROM users');

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    await pool.query('ALTER SEQUENCE users_id_seq RESTART WITH 1');
    await pool.query('ALTER SEQUENCE slons_id_seq RESTART WITH 1');
    await pool.query('ALTER SEQUENCE borovs_id_seq RESTART WITH 1');

    // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('üë• Inserting users...');
    await pool.query(`
      INSERT INTO users (username, password_hash, email, role, created_at) VALUES
      ('admin', $1, 'admin@borovy.ru', 'admin', NOW()),
      ('slon1', $1, 'slon1@borovy.ru', 'slon', NOW()),
      ('borov1', $1, 'borov1@borovy.ru', 'borov', NOW())
    `, [correctHash]);

    // –í—Å—Ç–∞–≤–ª—è–µ–º —Å–ª–æ–Ω–∞
    console.log('üêò Inserting slon...');
    await pool.query(`
      INSERT INTO slons (user_id, name, contact_info, created_at) VALUES
      (2, '–ò–≤–∞–Ω –°–ª–æ–Ω–æ—Ä–æ–≤', 'ivan@example.com', NOW())
    `);

    // –í—Å—Ç–∞–≤–ª—è–µ–º –±–æ—Ä–æ–≤–æ–≤–∞
    console.log('üêó Inserting borov...');
    await pool.query(`
      INSERT INTO borovs (user_id, slon_id, name, phone, status, created_at) VALUES
      (3, 1, '–ü–µ—Ç—Ä –ë–æ—Ä–æ–≤–æ–≤', '+79991234567', 'active', NOW())
    `);

    // –í—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ–∫–æ–¥
    console.log('üé´ Inserting promo code...');
    await pool.query(`
      INSERT INTO promocodes (code, slon_id, is_used, created_at) VALUES
      ('TEST2024', 1, false, NOW())
    `);

    // –í—Å—Ç–∞–≤–ª—è–µ–º –≤–∞—Ö—Ç—É
    console.log('üèóÔ∏è Inserting vakhta...');
    await pool.query(`
      INSERT INTO vakhtas (title, description, location, start_date, end_date, total_places, created_by_slon_id, created_at) VALUES
      ('–í–∞—Ö—Ç–∞ –Ω–∞ —Å—Ç—Ä–æ–π–∫–µ', '–†–∞–±–æ—Ç–∞ –Ω–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–µ –∂–∏–ª–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞', '–ú–æ—Å–∫–≤–∞', NOW() + INTERVAL '10 days', NOW() + INTERVAL '30 days', 10, 1, NOW())
    `);

    // –í—Å—Ç–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
    console.log('üîß Inserting specialties...');
    await pool.query(`
      INSERT INTO specialties (vakhta_id, title, description, requirements, salary, total_places, current_workers) VALUES
      (1, '–†–∞–∑–Ω–æ—Ä–∞–±–æ—á–∏–π', '–ü–æ–º–æ—â–Ω–∏–∫ –Ω–∞ —Å—Ç—Ä–æ–π–∫–µ', '–§–∏–∑–∏—á–µ—Å–∫–∞—è –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å', 50000.00, 5, 0),
      (1, '–°–≤–∞—Ä—â–∏–∫', '–†–∞–±–æ—Ç–∞ —Å–æ —Å–≤–∞—Ä–æ—á–Ω—ã–º –∞–ø–ø–∞—Ä–∞—Ç–æ–º', '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –æ—Ç 1 –≥–æ–¥–∞', 80000.00, 2, 0)
    `);

    console.log('üéâ Database seeded successfully!');
    console.log('\nüìù Test credentials:');
    console.log('üë§ Username: admin, Password: 123456');
    console.log('üë§ Username: slon1, Password: 123456');
    console.log('üë§ Username: borov1, Password: 123456');

  } catch (error) {
    console.error('‚ùå Seeding error:', error);
  } finally {
    process.exit();
  }
}

seedDatabase();