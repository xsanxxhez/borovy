require('dotenv').config();
const bcrypt = require('bcryptjs');
const { Pool } = require('pg');

const pool = new Pool({
  host: process.env.DB_HOST || 'localhost',
  port: process.env.DB_PORT || 5432,
  database: process.env.DB_NAME || 'borovy',
  user: process.env.DB_USER || 'borovy_user',
  password: process.env.DB_PASSWORD || 'borovy_password',
});

const seedData = async () => {
  try {
    console.log('Starting database seeding...');

    // Create default admin slon
    const adminPassword = await bcrypt.hash('admin123', 12);
    const adminResult = await pool.query(`
      INSERT INTO slons (username, display_name, password_hash, contact_phone, contact_email) 
      VALUES ($1, $2, $3, $4, $5) 
      RETURNING id
    `, ['admin', '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –°–∏—Å—Ç–µ–º—ã', adminPassword, '+79990000000', 'admin@borovy.ru']);

    const adminId = adminResult.rows[0].id;
    console.log('‚úÖ Admin slon created');

    // Create test slon
    const slonPassword = await bcrypt.hash('slon123', 12);
    const slonResult = await pool.query(`
      INSERT INTO slons (username, display_name, password_hash, contact_phone, contact_email) 
      VALUES ($1, $2, $3, $4, $5) 
      RETURNING id
    `, ['slon1', '–ò–≤–∞–Ω –ú–µ–Ω–µ–¥–∂–µ—Ä–æ–≤', slonPassword, '+79991111111', 'slon1@borovy.ru']);

    const slonId = slonResult.rows[0].id;
    console.log('‚úÖ Test slon created');

    // Create promo codes
    await pool.query(`
      INSERT INTO promo_codes (slon_id, code, description) 
      VALUES 
      ($1, 'SLON1_TIKTOK', '–ü—Ä–æ–º–æ–∫–æ–¥ –¥–ª—è TikTok –∫–∞–Ω–∞–ª–∞'),
      ($1, 'SLON1_INSTA', '–ü—Ä–æ–º–æ–∫–æ–¥ –¥–ª—è Instagram')
    `, [slonId]);
    console.log('‚úÖ Promo codes created');

    // Create sample vakhtas
    await pool.query(`
      INSERT INTO vakhtas (title, description, location, total_places, current_workers, start_date, end_date, requirements, conditions) 
      VALUES 
      ('–†–∞–∑–Ω–æ—Ä–∞–±–æ—á–∏–π –Ω–∞ —Å–∫–ª–∞–¥', '–†–∞–±–æ—Ç–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ, –ø–æ–≥—Ä—É–∑–æ-—Ä–∞–∑–≥—Ä—É–∑–æ—á–Ω—ã–µ —Ä–∞–±–æ—Ç—ã', '–ú–æ—Å–∫–≤–∞, —Å–∫–ª–∞–¥ ‚Ññ5', 20, 0, '2024-03-01', '2024-06-01', '–§–∏–∑–∏—á–µ—Å–∫–∞—è –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å', '–û–±—â–µ–∂–∏—Ç–∏–µ, –ø–∏—Ç–∞–Ω–∏–µ, 5000 —Ä—É–±/–¥–µ–Ω—å'),
      ('–°–±–æ—Ä—â–∏–∫ –º–µ–±–µ–ª–∏', '–°–±–æ—Ä–∫–∞ –∫–æ—Ä–ø—É—Å–Ω–æ–π –º–µ–±–µ–ª–∏ –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ', '–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å, –≥. –•–∏–º–∫–∏', 10, 0, '2024-03-15', '2024-05-15', '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç—Å—è, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å', '–û–±—â–µ–∂–∏—Ç–∏–µ, 6000 —Ä—É–±/–¥–µ–Ω—å'),
      ('–£–ø–∞–∫–æ–≤—â–∏–∫ –ø—Ä–æ–¥—É–∫—Ü–∏–∏', '–§–∞—Å–æ–≤–∫–∞ –∏ —É–ø–∞–∫–æ–≤–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–∏—Ç–∞–Ω–∏—è', '–ö–∞–∑–∞–Ω—å, –∑–∞–≤–æ–¥ ‚Ññ2', 15, 0, '2024-02-20', '2024-04-20', '–ê–∫–∫—É—Ä–∞—Ç–Ω–æ—Å—Ç—å, —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã', '–°–≤–æ—è –∫–æ–º–Ω–∞—Ç–∞, 4500 —Ä—É–±/–¥–µ–Ω—å')
    `);
    console.log('‚úÖ Sample vakhtas created');

    console.log('üéâ Database seeded successfully!');
    console.log('Default admin credentials:');
    console.log('Username: admin');
    console.log('Password: admin123');
    console.log('\nTest slon credentials:');
    console.log('Username: slon1');
    console.log('Password: slon123');

  } catch (error) {
    console.error('‚ùå Seeding failed:', error);
    process.exit(1);
  } finally {
    await pool.end();
  }
};

seedData();
