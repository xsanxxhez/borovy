#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Borovy –ø—Ä–æ–µ–∫—Ç–∞
echo "üöÄ Starting Borovy Application..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–±–∏–π—Å—Ç–≤–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞ –ø–æ—Ä—Ç—É
kill_port() {
    local port=$1
    echo -e "${YELLOW}üî´ Killing processes on port $port...${NC}"

    # –ù–∞—Ö–æ–¥–∏–º PID –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞ –ø–æ—Ä—Ç—É
    local pids=$(lsof -ti:$port)

    if [ -n "$pids" ]; then
        echo -e "${BLUE}üéØ Found processes: $pids${NC}"
        kill -9 $pids
        echo -e "${GREEN}‚úÖ Successfully killed processes on port $port${NC}"
    else
        echo -e "${BLUE}üì≠ No processes found on port $port${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞
wait_for_port() {
    local port=$1
    local service=$2
    local max_attempts=30
    local attempt=1

    echo -e "${YELLOW}‚è≥ Waiting for $service to start on port $port...${NC}"

    while [ $attempt -le $max_attempts ]; do
        if lsof -Pi :$port -sTCP:LISTEN -t >/dev/null ; then
            echo -e "${GREEN}‚úÖ $service is running on port $port${NC}"
            return 0
        fi
        echo -e "${BLUE}üì° Attempt $attempt/$max_attempts: $service not ready yet...${NC}"
        sleep 2
        ((attempt++))
    done

    echo -e "${RED}‚ùå $service failed to start on port $port${NC}"
    return 1
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç
echo -e "${BLUE}=========================================${NC}"
echo -e "${BLUE}         BOROVY STARTUP SCRIPT          ${NC}"
echo -e "${BLUE}=========================================${NC}"

# –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç–∞—Ö
kill_port 3000  # Frontend
kill_port 3001  # Backend
kill_port 5432  # PostgreSQL (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

# –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–æ—Ü–µ—Å—Å—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å
sleep 2

echo -e "${BLUE}=========================================${NC}"
echo -e "${BLUE}           STARTING BACKEND             ${NC}"
echo -e "${BLUE}=========================================${NC}"

# –ó–∞–ø—É—Å–∫–∞–µ–º –±—ç–∫–µ–Ω–¥
cd backend
echo -e "${YELLOW}üìÅ Starting backend in $(pwd)${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ª–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
if [ ! -d "node_modules" ]; then
    echo -e "${YELLOW}üì¶ Installing backend dependencies...${NC}"
    npm install
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º –±—ç–∫–µ–Ω–¥ –≤ —Ñ–æ–Ω–µ
npm run dev &
BACKEND_PID=$!
echo -e "${GREEN}‚úÖ Backend started with PID: $BACKEND_PID${NC}"

# –ñ–¥–µ–º –ø–æ–∫–∞ –±—ç–∫–µ–Ω–¥ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
cd ..
if wait_for_port 3001 "Backend"; then
    echo -e "${GREEN}üéâ Backend is ready!${NC}"
else
    echo -e "${RED}üí• Backend failed to start${NC}"
    kill $BACKEND_PID 2>/dev/null
    exit 1
fi

echo -e "${BLUE}=========================================${NC}"
echo -e "${BLUE}          STARTING FRONTEND             ${NC}"
echo -e "${BLUE}=========================================${NC}"

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
cd frontend
echo -e "${YELLOW}üìÅ Starting frontend in $(pwd)${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ª–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
if [ ! -d "node_modules" ]; then
    echo -e "${YELLOW}üì¶ Installing frontend dependencies...${NC}"
    npm install
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –≤ —Ñ–æ–Ω–µ
npm run dev &
FRONTEND_PID=$!
echo -e "${GREEN}‚úÖ Frontend started with PID: $FRONTEND_PID${NC}"

# –ñ–¥–µ–º –ø–æ–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
if wait_for_port 3000 "Frontend"; then
    echo -e "${GREEN}üéâ Frontend is ready!${NC}"
else
    echo -e "${RED}üí• Frontend failed to start${NC}"
    kill $FRONTEND_PID 2>/dev/null
    kill $BACKEND_PID 2>/dev/null
    exit 1
fi

echo -e "${BLUE}=========================================${NC}"
echo -e "${GREEN}           üéâ ALL SYSTEMS GO! üéâ         ${NC}"
echo -e "${BLUE}=========================================${NC}"
echo -e "${GREEN}‚úÖ Backend:  http://localhost:3001${NC}"
echo -e "${GREEN}‚úÖ Frontend: http://localhost:3000${NC}"
echo -e "${BLUE}=========================================${NC}"
echo -e "${YELLOW}Press Ctrl+C to stop all services${NC}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è graceful shutdown
cleanup() {
    echo -e "\n${YELLOW}üõë Shutting down services...${NC}"
    kill $BACKEND_PID 2>/dev/null
    kill $FRONTEND_PID 2>/dev/null
    echo -e "${GREEN}üëã Services stopped. Goodbye!${NC}"
    exit 0
}

# –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Å–∏–≥–Ω–∞–ª Ctrl+C
trap cleanup INT

# –ñ–¥–µ–º –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–º–µ—Ç Ctrl+C
wait